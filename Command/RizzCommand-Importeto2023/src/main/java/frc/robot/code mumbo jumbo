to code:
- intake
- pneumatics (claw/gear change)
- arm (raise) 
- autonomous
- navx{

import com.kauailabs.navx.frc.AHRS;
import edu.wpi.first.wpilibj.SPI;

 private AHRS navx;  
  
  public Robot() {
    try {
      navx = new AHRS(SPI.Port.kMXP);
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }

    navx.reset();
    double robotPitch = navx.getPitch();
    SmartDashboard.putData(navx);
    SmartDashboard.putNumber("NAVXANGLE", robotPitch)

  enum RobotAngle {
    Forward,
    leaningForward,
    Balanced,
    leaningBackward,
    Backward,
    unset
  }

  when robotPitch < 0 set m_sPeed = angle/time

  double tolerance = 2;
  double tiltBack = 15;
  double tiltFwd = -12;
  double bal = 0;

  public RobotAngle getPitch(double robotPitch) {
    RobotAngle result = RobotAngle.unset;
    if (Math.abs(robotPitch) < tolerance) {
      result = RobotAngle.Balanced;
    } else if (robotPitch > tiltBack) {
      result = RobotAngle.Backward;
    } else if (robotPitch < tiltBack && robotPitch > tolerance) {
      result = RobotAngle.leaningBackward;
    } else if (robotPitch > tiltFwd && robotPitch < -tolerance) {
      result = RobotAngle.leaningForward;
    } else if (robotPitch < tiltFwd) {
      result = RobotAngle.Forward;
    }
    SmartDashboard.putString("Robot Pitch", result.toString());
    return result;
}